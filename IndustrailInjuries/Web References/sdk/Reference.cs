//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.18408
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

// 
// This source code was auto-generated by Microsoft.VSDesigner, Version 4.0.30319.18408.
// 
#pragma warning disable 1591

namespace IndustrailInjuries.sdk {
    using System;
    using System.Web.Services;
    using System.Diagnostics;
    using System.Web.Services.Protocols;
    using System.Xml.Serialization;
    using System.ComponentModel;
    
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Web.Services.WebServiceBindingAttribute(Name="WebServiceSoap", Namespace="http://entinfo.cn/")]
    public partial class WebService : System.Web.Services.Protocols.SoapHttpClientProtocol {
        
        private System.Threading.SendOrPostCallback mdsmssendOperationCompleted;
        
        private System.Threading.SendOrPostCallback mdgxsendOperationCompleted;
        
        private System.Threading.SendOrPostCallback mdgetSninfoOperationCompleted;
        
        private bool useDefaultCredentialsSetExplicitly;
        
        /// <remarks/>
        public WebService() {
            this.Url = global::IndustrailInjuries.Properties.Settings.Default.IndustrailInjuries_sdk_WebService;
            if ((this.IsLocalFileSystemWebService(this.Url) == true)) {
                this.UseDefaultCredentials = true;
                this.useDefaultCredentialsSetExplicitly = false;
            }
            else {
                this.useDefaultCredentialsSetExplicitly = true;
            }
        }
        
        public new string Url {
            get {
                return base.Url;
            }
            set {
                if ((((this.IsLocalFileSystemWebService(base.Url) == true) 
                            && (this.useDefaultCredentialsSetExplicitly == false)) 
                            && (this.IsLocalFileSystemWebService(value) == false))) {
                    base.UseDefaultCredentials = false;
                }
                base.Url = value;
            }
        }
        
        public new bool UseDefaultCredentials {
            get {
                return base.UseDefaultCredentials;
            }
            set {
                base.UseDefaultCredentials = value;
                this.useDefaultCredentialsSetExplicitly = true;
            }
        }
        
        /// <remarks/>
        public event mdsmssendCompletedEventHandler mdsmssendCompleted;
        
        /// <remarks/>
        public event mdgxsendCompletedEventHandler mdgxsendCompleted;
        
        /// <remarks/>
        public event mdgetSninfoCompletedEventHandler mdgetSninfoCompleted;
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://entinfo.cn/mdsmssend", RequestNamespace="http://entinfo.cn/", ResponseNamespace="http://entinfo.cn/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string mdsmssend(string sn, string pwd, string mobile, string content, string ext, string stime, string rrid, string msgfmt) {
            object[] results = this.Invoke("mdsmssend", new object[] {
                        sn,
                        pwd,
                        mobile,
                        content,
                        ext,
                        stime,
                        rrid,
                        msgfmt});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void mdsmssendAsync(string sn, string pwd, string mobile, string content, string ext, string stime, string rrid, string msgfmt) {
            this.mdsmssendAsync(sn, pwd, mobile, content, ext, stime, rrid, msgfmt, null);
        }
        
        /// <remarks/>
        public void mdsmssendAsync(string sn, string pwd, string mobile, string content, string ext, string stime, string rrid, string msgfmt, object userState) {
            if ((this.mdsmssendOperationCompleted == null)) {
                this.mdsmssendOperationCompleted = new System.Threading.SendOrPostCallback(this.OnmdsmssendOperationCompleted);
            }
            this.InvokeAsync("mdsmssend", new object[] {
                        sn,
                        pwd,
                        mobile,
                        content,
                        ext,
                        stime,
                        rrid,
                        msgfmt}, this.mdsmssendOperationCompleted, userState);
        }
        
        private void OnmdsmssendOperationCompleted(object arg) {
            if ((this.mdsmssendCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.mdsmssendCompleted(this, new mdsmssendCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://entinfo.cn/mdgxsend", RequestNamespace="http://entinfo.cn/", ResponseNamespace="http://entinfo.cn/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string mdgxsend(string sn, string pwd, string mobile, string content, string ext, string stime, string rrid, string msgfmt) {
            object[] results = this.Invoke("mdgxsend", new object[] {
                        sn,
                        pwd,
                        mobile,
                        content,
                        ext,
                        stime,
                        rrid,
                        msgfmt});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void mdgxsendAsync(string sn, string pwd, string mobile, string content, string ext, string stime, string rrid, string msgfmt) {
            this.mdgxsendAsync(sn, pwd, mobile, content, ext, stime, rrid, msgfmt, null);
        }
        
        /// <remarks/>
        public void mdgxsendAsync(string sn, string pwd, string mobile, string content, string ext, string stime, string rrid, string msgfmt, object userState) {
            if ((this.mdgxsendOperationCompleted == null)) {
                this.mdgxsendOperationCompleted = new System.Threading.SendOrPostCallback(this.OnmdgxsendOperationCompleted);
            }
            this.InvokeAsync("mdgxsend", new object[] {
                        sn,
                        pwd,
                        mobile,
                        content,
                        ext,
                        stime,
                        rrid,
                        msgfmt}, this.mdgxsendOperationCompleted, userState);
        }
        
        private void OnmdgxsendOperationCompleted(object arg) {
            if ((this.mdgxsendCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.mdgxsendCompleted(this, new mdgxsendCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://entinfo.cn/mdgetSninfo", RequestNamespace="http://entinfo.cn/", ResponseNamespace="http://entinfo.cn/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string mdgetSninfo(string sn, string pwd) {
            object[] results = this.Invoke("mdgetSninfo", new object[] {
                        sn,
                        pwd});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void mdgetSninfoAsync(string sn, string pwd) {
            this.mdgetSninfoAsync(sn, pwd, null);
        }
        
        /// <remarks/>
        public void mdgetSninfoAsync(string sn, string pwd, object userState) {
            if ((this.mdgetSninfoOperationCompleted == null)) {
                this.mdgetSninfoOperationCompleted = new System.Threading.SendOrPostCallback(this.OnmdgetSninfoOperationCompleted);
            }
            this.InvokeAsync("mdgetSninfo", new object[] {
                        sn,
                        pwd}, this.mdgetSninfoOperationCompleted, userState);
        }
        
        private void OnmdgetSninfoOperationCompleted(object arg) {
            if ((this.mdgetSninfoCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.mdgetSninfoCompleted(this, new mdgetSninfoCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        public new void CancelAsync(object userState) {
            base.CancelAsync(userState);
        }
        
        private bool IsLocalFileSystemWebService(string url) {
            if (((url == null) 
                        || (url == string.Empty))) {
                return false;
            }
            System.Uri wsUri = new System.Uri(url);
            if (((wsUri.Port >= 1024) 
                        && (string.Compare(wsUri.Host, "localHost", System.StringComparison.OrdinalIgnoreCase) == 0))) {
                return true;
            }
            return false;
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    public delegate void mdsmssendCompletedEventHandler(object sender, mdsmssendCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class mdsmssendCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal mdsmssendCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    public delegate void mdgxsendCompletedEventHandler(object sender, mdgxsendCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class mdgxsendCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal mdgxsendCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    public delegate void mdgetSninfoCompletedEventHandler(object sender, mdgetSninfoCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class mdgetSninfoCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal mdgetSninfoCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
}

#pragma warning restore 1591